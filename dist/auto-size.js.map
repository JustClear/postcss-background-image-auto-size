{"version":3,"file":"auto-size.js","sources":["../src/helpers.ts","../src/index.ts"],"sourcesContent":["// helpers\n\nexport const hasBackground = (rule: string) => /background[^:]*.*url[^;]+/gi.test(rule);\n\nexport function getImageURL(rule: string) {\n    const matches = /url(?:\\(['\"]?)(.*?)(?:['\"]?\\))/gi.exec(rule);\n    const original = matches ? matches[1] : '';\n    const normalized = matches ? original.replace(/['\"]/gi, '').replace(/\\?.*$/gi, '') : '';\n    \n    return [original, normalized];\n}\n\nexport function getMatchedImage(images: ImageType[], url: string): ImageType {\n    const [matched] = images.filter(image => image.URL == url)\n\n    return matched;\n}\n\nexport function imageSupported(url: string) {\n    const http = /^http[s]?/gi;\n    const base64 = /^data\\:image/gi;\n\n    return !http.test(url) && !base64.test(url);\n}","import path from 'path';\nimport sizeOf from 'image-size';\nimport { plugin } from 'postcss';\nimport { hasBackground, getImageURL, imageSupported, getMatchedImage } from './helpers';\nconst PLUGIN_NAME = 'auto-image-size';\n\nexport default plugin(PLUGIN_NAME, () => {\n    return root => {\n        const images: ImageType[] = extractImages(root);\n\n        root.walkDecls(/^background(-image)?$/, (declare: any) => {\n            const rule = declare.parent;\n            const ruleString = rule.toString();\n\n            if (!hasBackground(ruleString)) return false;\n\n            const [, URL] = getImageURL(ruleString);\n            const image = getMatchedImage(images, URL)\n\n            if (!image) return false;\n\n            const { width, height } = sizeOf(image.path);\n            \n            declare.cloneAfter({\n                type: 'decl',\n                prop: 'width',\n                value: `${width}px`,\n            }).cloneAfter({\n                type: 'decl',\n                prop: 'height',\n                value: `${height}px`,\n            });\n        });\n    };\n});\n\n\nfunction extractImages(root: any): ImageType[] {\n    const images: ImageType[] = [];\n\n    root.walkRules((rule: any) => {\n        const styleFilePath = root.source.input.file;\n        const ruleString = rule.toString();\n        const image: ImageType = {\n            path: null,\n            URL: null,\n            originURL: null,\n        };\n\n        if (hasBackground(ruleString)) {\n            const [originURL, URL] = getImageURL(ruleString);\n\n            image.URL = URL;\n            image.originURL = originURL;\n\n            if (imageSupported(image.URL)) {\n                image.path = path.resolve(path.dirname(styleFilePath), image.URL);\n                images.push(image);\n            } else {\n                console.log(`image not supported`);\n            }\n        }\n    });\n\n    return images;\n}\n\n"],"names":["plugin"],"mappings":"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"}